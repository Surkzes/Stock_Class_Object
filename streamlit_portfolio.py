import time
import datetime

import streamlit as st
import numpy as np
import pandas as pd

import stock_class
import stock_streamlit_functions as div

START, END = (datetime.date.today() - datetime.timedelta(days=30 * 100)).strftime('%Y-%m-%d'), datetime.date.today().strftime('%Y-%m-%d')

st.beta_set_page_config(page_title='Stock Analysis', initial_sidebar_state="expanded")
st.sidebar.title("Create Your Portfolio Report")

ticker = st.sidebar.text_input("Enter Portfolio Tickers and Weights", value='')

stock = stock_class.Portfolio([['SPY', 0.2], ['VTI', 0.3], ['MSFT', 0.3], ['GOOG', 0.1], ['BAC', 0.05], ['AMZN', 0.05]], START, END)

# Quick Function to Clean Data
#def pull_info(stock, key):
#    try: return stock.info[key]
#    except: return 'Data Not Found'


# Write Title and General Company Information to the Report
#
#stock.company_info()
st.title("Portfolio Analysis")# + str(pull_info(stock, 'longName')))
st.write("## Current Price: " + "$" + str(stock.data['Adj Close'][-1]))
#st.write("This is an autogenerated Stock Analysis for " + pull_info(stock, 'longName') + '. \n' 
#          + "The company is located in " + pull_info(stock, 'city') + ', ' + pull_info(stock, 'state') 
#          + ', ' + pull_info(stock, 'country') + ". \n" +  pull_info(stock, 'longName') + " is in the " 
#          + pull_info(stock, 'sector') + ' and the ' + pull_info(stock, 'industry'))
#st.write('Website Link: ' + pull_info(stock, 'website'))


# Create SideBar Objects to Choose What to Include In the Report
#
graphs_multiselect = st.sidebar.multiselect(
    "Graph A Relationship",
    ("Price/Time",), default='Price/Time')

show_df = st.sidebar.checkbox('Show DataFrames')

#stmt_multiselect = st.sidebar.multiselect(
#    "Pull Financial Statement Information",
#    ("Income Statement", "Balance Sheet", "Statement of Cash Flows"), default="Income Statement")
#show_valuation = st.sidebar.checkbox('Show Valuation', value=False)


# Show the selected report modules
#
#div.show_graphs(graphs_multiselect, stock, show_df)
div.portfolio_price(stock)
#if show_valuation:
#    st.write("## Company Valuation")
#    st.write("Key metrics for determining how well a stock will perform in the future.")
#    st.table(stock.statement('valuation').T)

#div.show_fin_stmts(stmt_multiselect, stock, 1)

# Button to manually rerun for some reason
#  
st.button("Re-run")